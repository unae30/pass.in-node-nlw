// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Event {
  id               String  @id @default(uuid()) //unique universal identifier
  title            String
  details          String? //opcional ?
  slug             String  @unique
  maximumAttendees Int?    @map("maximum_attendees") //um  @ renomeia a coluna na tabela

  //relacionamento entre eventos e attendees. um evento pode ter vários attendees
  attendees Attendee[]

  @@map("events") // dois @ renomeia a tabela em si
}

model Attendee {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  createdAt DateTime @default(now()) @map("created_at")
  eventId   String   @map("event_id")

  //relacionamento entre attendees e eventos. 
  event Event @relation(fields: [eventId], references: [id], onDelete: Cascade)

  //nao necessariamente um attendee vai fazer checkin, portanto '?' na frente do relacionamento
  checkIn CheckIn?

  //o mesmo email do pode cadastrar uma vez em um mesmo evento 
  @@unique([eventId, email])
  @@map("attendees")
}

model CheckIn {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")

  //relacionamento checkin e attendees. Já aqui, todo checkin tem um attendee.
  attendee   Attendee @relation(fields: [attendeeId], references: [id], onDelete: Cascade)
  attendeeId Int      @unique @map("attendee_id")

  @@map("check_ins")
}
